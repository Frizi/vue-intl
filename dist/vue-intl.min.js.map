{"version":3,"file":"vue-intl.min.js","sources":["../node_modules/intl-messageformat/src/utils.js","../node_modules/intl-messageformat/src/compiler.js","../node_modules/intl-messageformat/src/core.js","../node_modules/intl-relativeformat/src/diff.js","../node_modules/intl-relativeformat/src/core.js","../src/localeData.js","../src/setLocale.js","../src/getLocaleData.js","../src/plural.js","../node_modules/intl-format-cache/src/memoizer.js","../src/utils.js","../src/format.js","../node_modules/intl-messageformat/src/es5.js","../node_modules/intl-messageformat/node_modules/intl-messageformat-parser/src/parser.js","../node_modules/intl-messageformat/src/en.js","../node_modules/intl-messageformat/src/main.js","../node_modules/intl-relativeformat/src/es5.js","../node_modules/intl-relativeformat/src/en.js","../node_modules/intl-relativeformat/src/main.js","../node_modules/intl-format-cache/src/es5.js","../src/state.js","../src/types.js","../src/vue-intl.js"],"sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport var hop = Object.prototype.hasOwnProperty;\n\nexport function extend(obj) {\n    var sources = Array.prototype.slice.call(arguments, 1),\n        i, len, source, key;\n\n    for (i = 0, len = sources.length; i < len; i += 1) {\n        source = sources[i];\n        if (!source) { continue; }\n\n        for (key in source) {\n            if (hop.call(source, key)) {\n                obj[key] = source[key];\n            }\n        }\n    }\n\n    return obj;\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport default Compiler;\n\nfunction Compiler(locales, formats, pluralFn) {\n    this.locales  = locales;\n    this.formats  = formats;\n    this.pluralFn = pluralFn;\n}\n\nCompiler.prototype.compile = function (ast) {\n    this.pluralStack        = [];\n    this.currentPlural      = null;\n    this.pluralNumberFormat = null;\n\n    return this.compileMessage(ast);\n};\n\nCompiler.prototype.compileMessage = function (ast) {\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new Error('Message AST is not of type: \"messageFormatPattern\"');\n    }\n\n    var elements = ast.elements,\n        pattern  = [];\n\n    var i, len, element;\n\n    for (i = 0, len = elements.length; i < len; i += 1) {\n        element = elements[i];\n\n        switch (element.type) {\n            case 'messageTextElement':\n                pattern.push(this.compileMessageText(element));\n                break;\n\n            case 'argumentElement':\n                pattern.push(this.compileArgument(element));\n                break;\n\n            default:\n                throw new Error('Message element does not have a valid type');\n        }\n    }\n\n    return pattern;\n};\n\nCompiler.prototype.compileMessageText = function (element) {\n    // When this `element` is part of plural sub-pattern and its value contains\n    // an unescaped '#', use a `PluralOffsetString` helper to properly output\n    // the number with the correct offset in the string.\n    if (this.currentPlural && /(^|[^\\\\])#/g.test(element.value)) {\n        // Create a cache a NumberFormat instance that can be reused for any\n        // PluralOffsetString instance in this message.\n        if (!this.pluralNumberFormat) {\n            this.pluralNumberFormat = new Intl.NumberFormat(this.locales);\n        }\n\n        return new PluralOffsetString(\n                this.currentPlural.id,\n                this.currentPlural.format.offset,\n                this.pluralNumberFormat,\n                element.value);\n    }\n\n    // Unescape the escaped '#'s in the message text.\n    return element.value.replace(/\\\\#/g, '#');\n};\n\nCompiler.prototype.compileArgument = function (element) {\n    var format = element.format;\n\n    if (!format) {\n        return new StringFormat(element.id);\n    }\n\n    var formats  = this.formats,\n        locales  = this.locales,\n        pluralFn = this.pluralFn,\n        options;\n\n    switch (format.type) {\n        case 'numberFormat':\n            options = formats.number[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.NumberFormat(locales, options).format\n            };\n\n        case 'dateFormat':\n            options = formats.date[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'timeFormat':\n            options = formats.time[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'pluralFormat':\n            options = this.compileOptions(element);\n            return new PluralFormat(\n                element.id, format.ordinal, format.offset, options, pluralFn\n            );\n\n        case 'selectFormat':\n            options = this.compileOptions(element);\n            return new SelectFormat(element.id, options);\n\n        default:\n            throw new Error('Message element does not have a valid format type');\n    }\n};\n\nCompiler.prototype.compileOptions = function (element) {\n    var format      = element.format,\n        options     = format.options,\n        optionsHash = {};\n\n    // Save the current plural element, if any, then set it to a new value when\n    // compiling the options sub-patterns. This conforms the spec's algorithm\n    // for handling `\"#\"` syntax in message text.\n    this.pluralStack.push(this.currentPlural);\n    this.currentPlural = format.type === 'pluralFormat' ? element : null;\n\n    var i, len, option;\n\n    for (i = 0, len = options.length; i < len; i += 1) {\n        option = options[i];\n\n        // Compile the sub-pattern and save it under the options's selector.\n        optionsHash[option.selector] = this.compileMessage(option.value);\n    }\n\n    // Pop the plural stack to put back the original current plural value.\n    this.currentPlural = this.pluralStack.pop();\n\n    return optionsHash;\n};\n\n// -- Compiler Helper Classes --------------------------------------------------\n\nfunction StringFormat(id) {\n    this.id = id;\n}\n\nStringFormat.prototype.format = function (value) {\n    if (!value) {\n        return '';\n    }\n\n    return typeof value === 'string' ? value : String(value);\n};\n\nfunction PluralFormat(id, useOrdinal, offset, options, pluralFn) {\n    this.id         = id;\n    this.useOrdinal = useOrdinal;\n    this.offset     = offset;\n    this.options    = options;\n    this.pluralFn   = pluralFn;\n}\n\nPluralFormat.prototype.getOption = function (value) {\n    var options = this.options;\n\n    var option = options['=' + value] ||\n            options[this.pluralFn(value - this.offset, this.useOrdinal)];\n\n    return option || options.other;\n};\n\nfunction PluralOffsetString(id, offset, numberFormat, string) {\n    this.id           = id;\n    this.offset       = offset;\n    this.numberFormat = numberFormat;\n    this.string       = string;\n}\n\nPluralOffsetString.prototype.format = function (value) {\n    var number = this.numberFormat.format(value - this.offset);\n\n    return this.string\n            .replace(/(^|[^\\\\])#/g, '$1' + number)\n            .replace(/\\\\#/g, '#');\n};\n\nfunction SelectFormat(id, options) {\n    this.id      = id;\n    this.options = options;\n}\n\nSelectFormat.prototype.getOption = function (value) {\n    var options = this.options;\n    return options[value] || options.other;\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {extend, hop} from './utils';\nimport {defineProperty, objCreate} from './es5';\nimport Compiler from './compiler';\nimport parser from 'intl-messageformat-parser';\n\nexport default MessageFormat;\n\n// -- MessageFormat --------------------------------------------------------\n\nfunction MessageFormat(message, locales, formats) {\n    // Parse string messages into an AST.\n    var ast = typeof message === 'string' ?\n            MessageFormat.__parse(message) : message;\n\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new TypeError('A message must be provided as a String or AST.');\n    }\n\n    // Creates a new object with the specified `formats` merged with the default\n    // formats.\n    formats = this._mergeFormats(MessageFormat.formats, formats);\n\n    // Defined first because it's used to build the format pattern.\n    defineProperty(this, '_locale',  {value: this._resolveLocale(locales)});\n\n    // Compile the `ast` to a pattern that is highly optimized for repeated\n    // `format()` invocations. **Note:** This passes the `locales` set provided\n    // to the constructor instead of just the resolved locale.\n    var pluralFn = this._findPluralRuleFunction(this._locale);\n    var pattern  = this._compilePattern(ast, locales, formats, pluralFn);\n\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var messageFormat = this;\n    this.format = function (values) {\n        return messageFormat._format(pattern, values);\n    };\n}\n\n// Default format options used as the prototype of the `formats` provided to the\n// constructor. These are used when constructing the internal Intl.NumberFormat\n// and Intl.DateTimeFormat instances.\ndefineProperty(MessageFormat, 'formats', {\n    enumerable: true,\n\n    value: {\n        number: {\n            'currency': {\n                style: 'currency'\n            },\n\n            'percent': {\n                style: 'percent'\n            }\n        },\n\n        date: {\n            'short': {\n                month: 'numeric',\n                day  : 'numeric',\n                year : '2-digit'\n            },\n\n            'medium': {\n                month: 'short',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'long': {\n                month: 'long',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'full': {\n                weekday: 'long',\n                month  : 'long',\n                day    : 'numeric',\n                year   : 'numeric'\n            }\n        },\n\n        time: {\n            'short': {\n                hour  : 'numeric',\n                minute: 'numeric'\n            },\n\n            'medium':  {\n                hour  : 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            },\n\n            'long': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            },\n\n            'full': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            }\n        }\n    }\n});\n\n// Define internal private properties for dealing with locale data.\ndefineProperty(MessageFormat, '__localeData__', {value: objCreate(null)});\ndefineProperty(MessageFormat, '__addLocaleData', {value: function (data) {\n    if (!(data && data.locale)) {\n        throw new Error(\n            'Locale data provided to IntlMessageFormat is missing a ' +\n            '`locale` property'\n        );\n    }\n\n    MessageFormat.__localeData__[data.locale.toLowerCase()] = data;\n}});\n\n// Defines `__parse()` static method as an exposed private.\ndefineProperty(MessageFormat, '__parse', {value: parser.parse});\n\n// Define public `defaultLocale` property which defaults to English, but can be\n// set by the developer.\ndefineProperty(MessageFormat, 'defaultLocale', {\n    enumerable: true,\n    writable  : true,\n    value     : undefined\n});\n\nMessageFormat.prototype.resolvedOptions = function () {\n    // TODO: Provide anything else?\n    return {\n        locale: this._locale\n    };\n};\n\nMessageFormat.prototype._compilePattern = function (ast, locales, formats, pluralFn) {\n    var compiler = new Compiler(locales, formats, pluralFn);\n    return compiler.compile(ast);\n};\n\nMessageFormat.prototype._findPluralRuleFunction = function (locale) {\n    var localeData = MessageFormat.__localeData__;\n    var data       = localeData[locale.toLowerCase()];\n\n    // The locale data is de-duplicated, so we have to traverse the locale's\n    // hierarchy until we find a `pluralRuleFunction` to return.\n    while (data) {\n        if (data.pluralRuleFunction) {\n            return data.pluralRuleFunction;\n        }\n\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n    }\n\n    throw new Error(\n        'Locale data added to IntlMessageFormat is missing a ' +\n        '`pluralRuleFunction` for :' + locale\n    );\n};\n\nMessageFormat.prototype._format = function (pattern, values) {\n    var result = '',\n        i, len, part, id, value;\n\n    for (i = 0, len = pattern.length; i < len; i += 1) {\n        part = pattern[i];\n\n        // Exist early for string parts.\n        if (typeof part === 'string') {\n            result += part;\n            continue;\n        }\n\n        id = part.id;\n\n        // Enforce that all required values are provided by the caller.\n        if (!(values && hop.call(values, id))) {\n            throw new Error('A value must be provided for: ' + id);\n        }\n\n        value = values[id];\n\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (part.options) {\n            result += this._format(part.getOption(value), values);\n        } else {\n            result += part.format(value);\n        }\n    }\n\n    return result;\n};\n\nMessageFormat.prototype._mergeFormats = function (defaults, formats) {\n    var mergedFormats = {},\n        type, mergedType;\n\n    for (type in defaults) {\n        if (!hop.call(defaults, type)) { continue; }\n\n        mergedFormats[type] = mergedType = objCreate(defaults[type]);\n\n        if (formats && hop.call(formats, type)) {\n            extend(mergedType, formats[type]);\n        }\n    }\n\n    return mergedFormats;\n};\n\nMessageFormat.prototype._resolveLocale = function (locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n\n    // Create a copy of the array so we can push on the default locale.\n    locales = (locales || []).concat(MessageFormat.defaultLocale);\n\n    var localeData = MessageFormat.__localeData__;\n    var i, len, localeParts, data;\n\n    // Using the set of locales + the default locale, we look for the first one\n    // which that has been registered. When data does not exist for a locale, we\n    // traverse its ancestors to find something that's been registered within\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\n    // here, we must take a naive approach to traversal.\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        localeParts = locales[i].toLowerCase().split('-');\n\n        while (localeParts.length) {\n            data = localeData[localeParts.join('-')];\n            if (data) {\n                // Return the normalized locale string; e.g., we return \"en-US\",\n                // instead of \"en-us\".\n                return data.locale;\n            }\n\n            localeParts.pop();\n        }\n    }\n\n    var defaultLocale = locales.pop();\n    throw new Error(\n        'No locale data has been added to IntlMessageFormat for: ' +\n        locales.join(', ') + ', or the default locale: ' + defaultLocale\n    );\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nvar round = Math.round;\n\nfunction daysToYears(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    return days * 400 / 146097;\n}\n\nexport default function (from, to) {\n    // Convert to ms timestamps.\n    from = +from;\n    to   = +to;\n\n    var millisecond = round(to - from),\n        second      = round(millisecond / 1000),\n        minute      = round(second / 60),\n        hour        = round(minute / 60),\n        day         = round(hour / 24),\n        week        = round(day / 7);\n\n    var rawYears = daysToYears(day),\n        month    = round(rawYears * 12),\n        year     = round(rawYears);\n\n    return {\n        millisecond: millisecond,\n        second     : second,\n        minute     : minute,\n        hour       : hour,\n        day        : day,\n        week       : week,\n        month      : month,\n        year       : year\n    };\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport IntlMessageFormat from 'intl-messageformat';\nimport diff from './diff';\nimport {\n    defineProperty,\n    objCreate,\n    arrIndexOf,\n    isArray,\n    dateNow\n} from './es5';\n\nexport default RelativeFormat;\n\n// -----------------------------------------------------------------------------\n\nvar FIELDS = ['second', 'minute', 'hour', 'day', 'month', 'year'];\nvar STYLES = ['best fit', 'numeric'];\n\n// -- RelativeFormat -----------------------------------------------------------\n\nfunction RelativeFormat(locales, options) {\n    options = options || {};\n\n    // Make a copy of `locales` if it's an array, so that it doesn't change\n    // since it's used lazily.\n    if (isArray(locales)) {\n        locales = locales.concat();\n    }\n\n    defineProperty(this, '_locale', {value: this._resolveLocale(locales)});\n    defineProperty(this, '_options', {value: {\n        style: this._resolveStyle(options.style),\n        units: this._isValidUnits(options.units) && options.units\n    }});\n\n    defineProperty(this, '_locales', {value: locales});\n    defineProperty(this, '_fields', {value: this._findFields(this._locale)});\n    defineProperty(this, '_messages', {value: objCreate(null)});\n\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var relativeFormat = this;\n    this.format = function format(date, options) {\n        return relativeFormat._format(date, options);\n    };\n}\n\n// Define internal private properties for dealing with locale data.\ndefineProperty(RelativeFormat, '__localeData__', {value: objCreate(null)});\ndefineProperty(RelativeFormat, '__addLocaleData', {value: function (data) {\n    if (!(data && data.locale)) {\n        throw new Error(\n            'Locale data provided to IntlRelativeFormat is missing a ' +\n            '`locale` property value'\n        );\n    }\n\n    RelativeFormat.__localeData__[data.locale.toLowerCase()] = data;\n\n    // Add data to IntlMessageFormat.\n    IntlMessageFormat.__addLocaleData(data);\n}});\n\n// Define public `defaultLocale` property which can be set by the developer, or\n// it will be set when the first RelativeFormat instance is created by\n// leveraging the resolved locale from `Intl`.\ndefineProperty(RelativeFormat, 'defaultLocale', {\n    enumerable: true,\n    writable  : true,\n    value     : undefined\n});\n\n// Define public `thresholds` property which can be set by the developer, and\n// defaults to relative time thresholds from moment.js.\ndefineProperty(RelativeFormat, 'thresholds', {\n    enumerable: true,\n\n    value: {\n        second: 45,  // seconds to minute\n        minute: 45,  // minutes to hour\n        hour  : 22,  // hours to day\n        day   : 26,  // days to month\n        month : 11   // months to year\n    }\n});\n\nRelativeFormat.prototype.resolvedOptions = function () {\n    return {\n        locale: this._locale,\n        style : this._options.style,\n        units : this._options.units\n    };\n};\n\nRelativeFormat.prototype._compileMessage = function (units) {\n    // `this._locales` is the original set of locales the user specified to the\n    // constructor, while `this._locale` is the resolved root locale.\n    var locales        = this._locales;\n    var resolvedLocale = this._locale;\n\n    var field        = this._fields[units];\n    var relativeTime = field.relativeTime;\n    var future       = '';\n    var past         = '';\n    var i;\n\n    for (i in relativeTime.future) {\n        if (relativeTime.future.hasOwnProperty(i)) {\n            future += ' ' + i + ' {' +\n                relativeTime.future[i].replace('{0}', '#') + '}';\n        }\n    }\n\n    for (i in relativeTime.past) {\n        if (relativeTime.past.hasOwnProperty(i)) {\n            past += ' ' + i + ' {' +\n                relativeTime.past[i].replace('{0}', '#') + '}';\n        }\n    }\n\n    var message = '{when, select, future {{0, plural, ' + future + '}}' +\n                                 'past {{0, plural, ' + past + '}}}';\n\n    // Create the synthetic IntlMessageFormat instance using the original\n    // locales value specified by the user when constructing the the parent\n    // IntlRelativeFormat instance.\n    return new IntlMessageFormat(message, locales);\n};\n\nRelativeFormat.prototype._getMessage = function (units) {\n    var messages = this._messages;\n\n    // Create a new synthetic message based on the locale data from CLDR.\n    if (!messages[units]) {\n        messages[units] = this._compileMessage(units);\n    }\n\n    return messages[units];\n};\n\nRelativeFormat.prototype._getRelativeUnits = function (diff, units) {\n    var field = this._fields[units];\n\n    if (field.relative) {\n        return field.relative[diff];\n    }\n};\n\nRelativeFormat.prototype._findFields = function (locale) {\n    var localeData = RelativeFormat.__localeData__;\n    var data       = localeData[locale.toLowerCase()];\n\n    // The locale data is de-duplicated, so we have to traverse the locale's\n    // hierarchy until we find `fields` to return.\n    while (data) {\n        if (data.fields) {\n            return data.fields;\n        }\n\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n    }\n\n    throw new Error(\n        'Locale data added to IntlRelativeFormat is missing `fields` for :' +\n        locale\n    );\n};\n\nRelativeFormat.prototype._format = function (date, options) {\n    var now = options && options.now !== undefined ? options.now : dateNow();\n\n    if (date === undefined) {\n        date = now;\n    }\n\n    // Determine if the `date` and optional `now` values are valid, and throw a\n    // similar error to what `Intl.DateTimeFormat#format()` would throw.\n    if (!isFinite(now)) {\n        throw new RangeError(\n            'The `now` option provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.'\n        );\n    }\n\n    if (!isFinite(date)) {\n        throw new RangeError(\n            'The date value provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.'\n        );\n    }\n\n    var diffReport  = diff(now, date);\n    var units       = this._options.units || this._selectUnits(diffReport);\n    var diffInUnits = diffReport[units];\n\n    if (this._options.style !== 'numeric') {\n        var relativeUnits = this._getRelativeUnits(diffInUnits, units);\n        if (relativeUnits) {\n            return relativeUnits;\n        }\n    }\n\n    return this._getMessage(units).format({\n        '0' : Math.abs(diffInUnits),\n        when: diffInUnits < 0 ? 'past' : 'future'\n    });\n};\n\nRelativeFormat.prototype._isValidUnits = function (units) {\n    if (!units || arrIndexOf.call(FIELDS, units) >= 0) {\n        return true;\n    }\n\n    if (typeof units === 'string') {\n        var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);\n        if (suggestion && arrIndexOf.call(FIELDS, suggestion) >= 0) {\n            throw new Error(\n                '\"' + units + '\" is not a valid IntlRelativeFormat `units` ' +\n                'value, did you mean: ' + suggestion\n            );\n        }\n    }\n\n    throw new Error(\n        '\"' + units + '\" is not a valid IntlRelativeFormat `units` value, it ' +\n        'must be one of: \"' + FIELDS.join('\", \"') + '\"'\n    );\n};\n\nRelativeFormat.prototype._resolveLocale = function (locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n\n    // Create a copy of the array so we can push on the default locale.\n    locales = (locales || []).concat(RelativeFormat.defaultLocale);\n\n    var localeData = RelativeFormat.__localeData__;\n    var i, len, localeParts, data;\n\n    // Using the set of locales + the default locale, we look for the first one\n    // which that has been registered. When data does not exist for a locale, we\n    // traverse its ancestors to find something that's been registered within\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\n    // here, we must take a naive approach to traversal.\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        localeParts = locales[i].toLowerCase().split('-');\n\n        while (localeParts.length) {\n            data = localeData[localeParts.join('-')];\n            if (data) {\n                // Return the normalized locale string; e.g., we return \"en-US\",\n                // instead of \"en-us\".\n                return data.locale;\n            }\n\n            localeParts.pop();\n        }\n    }\n\n    var defaultLocale = locales.pop();\n    throw new Error(\n        'No locale data has been added to IntlRelativeFormat for: ' +\n        locales.join(', ') + ', or the default locale: ' + defaultLocale\n    );\n};\n\nRelativeFormat.prototype._resolveStyle = function (style) {\n    // Default to \"best fit\" style.\n    if (!style) {\n        return STYLES[0];\n    }\n\n    if (arrIndexOf.call(STYLES, style) >= 0) {\n        return style;\n    }\n\n    throw new Error(\n        '\"' + style + '\" is not a valid IntlRelativeFormat `style` value, it ' +\n        'must be one of: \"' + STYLES.join('\", \"') + '\"'\n    );\n};\n\nRelativeFormat.prototype._selectUnits = function (diffReport) {\n    var i, l, units;\n\n    for (i = 0, l = FIELDS.length; i < l; i += 1) {\n        units = FIELDS[i];\n\n        if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {\n            break;\n        }\n    }\n\n    return units;\n};\n","/*\n * This file is a modified version of that used in the react-intl package.\n * https://github.com/yahoo/react-intl\n * The license notice below is provided to comply with the terms of the BSD license of that package.\n */\n\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n *\n *   * Neither the name of the Yahoo Inc. nor the\n *     names of its contributors may be used to endorse or promote products\n *     derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL YAHOO! INC. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport IntlMessageFormat from 'intl-messageformat';\nimport IntlRelativeFormat from 'intl-relativeformat';\n\nexport function addLocaleData(data = []) {\n    let locales = Array.isArray(data) ? data : [data];\n\n    locales.forEach((localeData) => {\n        if (localeData && localeData.locale) {\n            IntlMessageFormat.__addLocaleData(localeData);\n            IntlRelativeFormat.__addLocaleData(localeData);\n        }\n    });\n}\n\nexport function hasLocaleData(locale) {\n    let localeParts = (locale || '').split('-');\n\n    while (localeParts.length > 0) {\n        if (hasIMFAndIRFLocaleData(localeParts.join('-'))) {\n            return true;\n        }\n\n        localeParts.pop();\n    }\n\n    return false;\n}\n\nfunction hasIMFAndIRFLocaleData(locale) {\n    let normalizedLocale = locale && locale.toLowerCase();\n\n    return !!(\n        IntlMessageFormat.__localeData__[normalizedLocale] &&\n        IntlRelativeFormat.__localeData__[normalizedLocale]\n    );\n}\n\nexport function registerMessages(Vue, locale, messages) {\n    Vue.__allMessages = Vue.__allMessages || {};\n    Vue.__allMessages[locale] = Vue.__allMessages[locale] || {};\n    Object.assign(Vue.__allMessages[locale], messages);\n}\n\nexport function registerFormats(Vue, locale, formats) {\n    Vue.__allFormats = Vue.__allFormats || {};\n    Vue.__allFormats[locale] = Vue.__allFormats[locale] || {};\n    Object.assign(Vue.__allFormats[locale], formats);\n}\n","export default function setLocale(Vue, locale) {\n    Vue.set(Vue, 'locale', locale);\n    const format_data = Object.getOwnPropertyNames((Vue.__allFormats || {})[locale] || {}).length > 0;\n    Vue.__format_config.formats = format_data ? Vue.__allFormats[locale] : Vue.__format_config.defaultFormats;\n    Vue.__format_config.messages = (Vue.__allMessages || {})[locale] || {};\n}\n","export default function getLocaleData(Vue) {\n    const locale = Vue.locale;\n    const format_data = Object.getOwnPropertyNames((Vue.__allFormats || {})[locale] || {}).length > 0;\n    const formats = format_data ? Vue.__allFormats[locale] : Vue.__format_config.defaultFormats;\n    const messages = (Vue.__allMessages || {})[locale] || {};\n    return {\n        formats,\n        messages,\n        defaultLocale: Vue.__format_config.defaultLocale,\n        defaultFormats: Vue.__format_config.defaultFormats\n    };\n}\n","/*\n * This file is an unmodified copy of that used in the react-intl package.\n * https://github.com/yahoo/react-intl\n * The license notice below is provided to comply with the terms of the BSD license of that package.\n */\n\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n *\n *   * Neither the name of the Yahoo Inc. nor the\n *     names of its contributors may be used to endorse or promote products\n *     derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL YAHOO! INC. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n\n// This is a \"hack\" until a proper `intl-pluralformat` package is created.\n\nimport IntlMessageFormat from 'intl-messageformat';\n\nfunction resolveLocale(locales) {\n    // IntlMessageFormat#_resolveLocale() does not depend on `this`.\n    return IntlMessageFormat.prototype._resolveLocale(locales);\n}\n\nfunction findPluralFunction(locale) {\n    // IntlMessageFormat#_findPluralFunction() does not depend on `this`.\n    return IntlMessageFormat.prototype._findPluralRuleFunction(locale);\n}\n\nexport default class IntlPluralFormat {\n    constructor(locales, options = {}) {\n        let useOrdinal = options.style === 'ordinal';\n        let pluralFn   = findPluralFunction(resolveLocale(locales));\n\n        this.format = (value) => pluralFn(value, useOrdinal);\n    }\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jshint esnext: true */\n\nimport {bind, objCreate} from './es5';\n\nexport default createFormatCache;\n\n// -----------------------------------------------------------------------------\n\nfunction createFormatCache(FormatConstructor) {\n    var cache = objCreate(null);\n\n    return function () {\n        var args    = Array.prototype.slice.call(arguments);\n        var cacheId = getCacheId(args);\n        var format  = cacheId && cache[cacheId];\n\n        if (!format) {\n            format = new (bind.apply(FormatConstructor, [null].concat(args)))();\n\n            if (cacheId) {\n                cache[cacheId] = format;\n            }\n        }\n\n        return format;\n    };\n}\n\n// -- Utilities ----------------------------------------------------------------\n\nfunction getCacheId(inputs) {\n    // When JSON is not available in the runtime, we will not create a cache id.\n    if (typeof JSON === 'undefined') { return; }\n\n    var cacheId = [];\n\n    var i, len, input;\n\n    for (i = 0, len = inputs.length; i < len; i += 1) {\n        input = inputs[i];\n\n        if (input && typeof input === 'object') {\n            cacheId.push(orderedProps(input));\n        } else {\n            cacheId.push(input);\n        }\n    }\n\n    return JSON.stringify(cacheId);\n}\n\nfunction orderedProps(obj) {\n    var props = [],\n        keys  = [];\n\n    var key, i, len, prop;\n\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            keys.push(key);\n        }\n    }\n\n    var orderedKeys = keys.sort();\n\n    for (i = 0, len = orderedKeys.length; i < len; i += 1) {\n        key  = orderedKeys[i];\n        prop = {};\n\n        prop[key] = obj[key];\n        props[i]  = prop;\n    }\n\n    return props;\n}\n","/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\n\nconst ESCAPED_CHARS = {\n    '&' : '&amp;',\n    '>' : '&gt;',\n    '<' : '&lt;',\n    '\"' : '&quot;',\n    '\\'': '&#x27;'\n};\n\nconst UNSAFE_CHARS_REGEX = /[&><\"']/g;\n\nexport function escape(str) {\n    return ('' + str).replace(UNSAFE_CHARS_REGEX, (match) => ESCAPED_CHARS[match]);\n}\n\nexport function filterProps(props, whitelist, defaults = {}) {\n    return whitelist.reduce((filtered, name) => {\n        if (props.hasOwnProperty(name)) {\n            filtered[name] = props[name];\n        } else if (defaults.hasOwnProperty(name)) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\n","/*\n * This file is a modified version of that used in the react-intl package.\n * https://github.com/yahoo/react-intl\n * The license notice below is provided to comply with the terms of the BSD license of that package.\n */\n\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n *\n *   * Neither the name of the Yahoo Inc. nor the\n *     names of its contributors may be used to endorse or promote products\n *     derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL YAHOO! INC. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport IntlRelativeFormat from 'intl-relativeformat';\n\nimport {\n    dateTimeFormatPropTypes,\n    numberFormatPropTypes,\n    relativeFormatPropTypes,\n    pluralFormatPropTypes\n} from './types';\n\nimport {\n    escape,\n    filterProps\n} from './utils';\n\nconst DATE_TIME_FORMAT_OPTIONS = Object.keys(dateTimeFormatPropTypes);\nconst NUMBER_FORMAT_OPTIONS    = Object.keys(numberFormatPropTypes);\nconst RELATIVE_FORMAT_OPTIONS  = Object.keys(relativeFormatPropTypes);\nconst PLURAL_FORMAT_OPTIONS    = Object.keys(pluralFormatPropTypes);\n\nconst RELATIVE_FORMAT_THRESHOLDS = {\n    second: 60, // seconds to minute\n    minute: 60, // minutes to hour\n    hour  : 24, // hours to day\n    day   : 30, // days to month\n    month : 12  // months to year\n};\n\nfunction updateRelativeFormatThresholds(newThresholds) {\n    const {thresholds} = IntlRelativeFormat;\n    ({\n        second: thresholds.second,\n        minute: thresholds.minute,\n        hour  : thresholds.hour,\n        day   : thresholds.day,\n        month : thresholds.month\n    } = newThresholds);\n}\n\nfunction getNamedFormat(formats, type, name) {\n    let format = formats && formats[type] && formats[type][name];\n    if (format) {\n        return format;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(\n            `[Vue Intl] No ${type} format named: ${name}`\n        );\n    }\n}\n\nexport function formatDate(config, state, value, options = {}) {\n    const {locale, formats} = config;\n    const {format}          = options;\n\n    let date            = new Date(value);\n    let defaults        = format && getNamedFormat(formats, 'date', format);\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(date);\n    } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Vue Intl] Error formatting date.\\n${e}`\n            );\n        }\n    }\n\n    return String(date);\n}\n\nexport function formatTime(config, state, value, options = {}) {\n    const {locale, formats} = config;\n    const {format}          = options;\n\n    let date            = new Date(value);\n    let defaults        = format && getNamedFormat(formats, 'time', format);\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n\n    // When no formatting options have been specified, default to outputting a\n    // time; e.g.: \"9:42 AM\".\n    if (Object.keys(filteredOptions).length === 0) {\n        filteredOptions = {\n            hour  : 'numeric',\n            minute: 'numeric'\n        };\n    }\n\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(date);\n    } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Vue Intl] Error formatting time.\\n${e}`\n            );\n        }\n    }\n\n    return String(date);\n}\n\nexport function formatRelative(config, state, value, options = {}) {\n    const {locale, formats} = config;\n    const {format}          = options;\n\n    let date            = new Date(value);\n    let now             = new Date(options.now);\n    let defaults        = format && getNamedFormat(formats, 'relative', format);\n    let filteredOptions = filterProps(options, RELATIVE_FORMAT_OPTIONS, defaults);\n\n    // Capture the current threshold values, then temporarily override them with\n    // specific values just for this render.\n    const oldThresholds = Object.assign({}, IntlRelativeFormat.thresholds);\n    updateRelativeFormatThresholds(RELATIVE_FORMAT_THRESHOLDS);\n\n    try {\n        return state.getRelativeFormat(locale, filteredOptions).format(date, {\n            now: isFinite(now) ? now : state.now()\n        });\n    } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Vue Intl] Error formatting relative time.\\n${e}`\n            );\n        }\n    } finally {\n        updateRelativeFormatThresholds(oldThresholds);\n    }\n\n    return String(date);\n}\n\nexport function formatNumber(config, state, value, options = {}) {\n    const {locale, formats} = config;\n    const {format}          = options;\n\n    let defaults        = format && getNamedFormat(formats, 'number', format);\n    let filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n\n    try {\n        return state.getNumberFormat(locale, filteredOptions).format(value);\n    } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Vue Intl] Error formatting number.\\n${e}`\n            );\n        }\n    }\n\n    return String(value);\n}\n\nexport function formatPlural(config, state, value, options = {}) {\n    const {locale} = config;\n\n    let filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n\n    try {\n        return state.getPluralFormat(locale, filteredOptions).format(value);\n    } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Vue Intl] Error formatting plural.\\n${e}`\n            );\n        }\n    }\n\n    return 'other';\n}\n\nexport function formatMessage(config, state, messageDescriptor = {}, values = {}) {\n    const {\n        locale,\n        formats,\n        messages,\n        defaultLocale,\n        defaultFormats\n    } = config;\n\n    const {\n        id,\n        defaultMessage\n    } = messageDescriptor;\n\n    // `id` is a required field of a Message Descriptor.\n    if (!id) {\n        throw new TypeError('[Vue Intl] An `id` must be provided to format a message.');\n    }\n\n    const message   = messages && messages[id];\n    const hasValues = Object.keys(values).length > 0;\n\n    // Avoid expensive message formatting for simple messages without values. In\n    // development messages will always be formatted in case of missing values.\n    if (!hasValues && process.env.NODE_ENV === 'production') {\n        return message || defaultMessage || id;\n    }\n\n    let formattedMessage;\n\n    if (message) {\n        try {\n            let formatter = state.getMessageFormat(\n                message, locale, formats\n            );\n\n            formattedMessage = formatter.format(values);\n        } catch (e) {\n            if (process.env.NODE_ENV !== 'production') {\n                console.error(\n                    `[Vue Intl] Error formatting message: \"${id}\" for locale: \"${locale}\"` +\n                    (defaultMessage ? ', using default message as fallback.' : '') +\n                    `\\n${e}`\n                );\n            }\n        }\n    } else {\n        if (process.env.NODE_ENV !== 'production') {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale, and a default message is in the source.\n            if (!defaultMessage ||\n                (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n\n                console.error(\n                    `[Vue Intl] Missing message: \"${id}\" for locale: \"${locale}\"` +\n                    (defaultMessage ? ', using default message as fallback.' : '')\n                );\n            }\n        }\n    }\n\n    if (!formattedMessage && defaultMessage) {\n        try {\n            let formatter = state.getMessageFormat(\n                defaultMessage, defaultLocale, defaultFormats\n            );\n\n            formattedMessage = formatter.format(values);\n        } catch (e) {\n            if (process.env.NODE_ENV !== 'production') {\n                console.error(\n                    `[Vue Intl] Error formatting the default message for: \"${id}\"` +\n                    `\\n${e}`\n                );\n            }\n        }\n    }\n\n    if (!formattedMessage) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Vue Intl] Cannot format message: \"${id}\", ` +\n                `using message ${message || defaultMessage ? 'source' : 'id'} as fallback.`\n            );\n        }\n    }\n\n    return formattedMessage || message || defaultMessage || id;\n}\n\nexport function formatHTMLMessage(config, state, messageDescriptor, rawValues = {}) {\n    // Process all the values before they are used when formatting the ICU\n    // Message string. Since the formatted message might be injected via\n    // `innerHTML`, all String-based values need to be HTML-escaped.\n    let escapedValues = Object.keys(rawValues).reduce((escaped, name) => {\n        let value = rawValues[name];\n        escaped[name] = typeof value === 'string' ? escape(value) : value;\n        return escaped;\n    }, {});\n\n    return formatMessage(config, state, messageDescriptor, escapedValues);\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {hop} from './utils';\n\nexport {defineProperty, objCreate};\n\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\n// Copyright 2013 Andy Earnshaw, MIT License\n\nvar realDefineProp = (function () {\n    try { return !!Object.defineProperty({}, 'a', {}); }\n    catch (e) { return false; }\n})();\n\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\nvar defineProperty = realDefineProp ? Object.defineProperty :\n        function (obj, name, desc) {\n\n    if ('get' in desc && obj.__defineGetter__) {\n        obj.__defineGetter__(name, desc.get);\n    } else if (!hop.call(obj, name) || 'value' in desc) {\n        obj[name] = desc.value;\n    }\n};\n\nvar objCreate = Object.create || function (proto, props) {\n    var obj, k;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (k in props) {\n        if (hop.call(props, k)) {\n            defineProperty(obj, k, props[k]);\n        }\n    }\n\n    return obj;\n};\n","export default (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = [],\n        peg$c1 = function(elements) {\n                return {\n                    type    : 'messageFormatPattern',\n                    elements: elements\n                };\n            },\n        peg$c2 = peg$FAILED,\n        peg$c3 = function(text) {\n                var string = '',\n                    i, j, outerLen, inner, innerLen;\n\n                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {\n                    inner = text[i];\n\n                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {\n                        string += inner[j];\n                    }\n                }\n\n                return string;\n            },\n        peg$c4 = function(messageText) {\n                return {\n                    type : 'messageTextElement',\n                    value: messageText\n                };\n            },\n        peg$c5 = /^[^ \\t\\n\\r,.+={}#]/,\n        peg$c6 = { type: \"class\", value: \"[^ \\\\t\\\\n\\\\r,.+={}#]\", description: \"[^ \\\\t\\\\n\\\\r,.+={}#]\" },\n        peg$c7 = \"{\",\n        peg$c8 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c9 = null,\n        peg$c10 = \",\",\n        peg$c11 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c12 = \"}\",\n        peg$c13 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c14 = function(id, format) {\n                return {\n                    type  : 'argumentElement',\n                    id    : id,\n                    format: format && format[2]\n                };\n            },\n        peg$c15 = \"number\",\n        peg$c16 = { type: \"literal\", value: \"number\", description: \"\\\"number\\\"\" },\n        peg$c17 = \"date\",\n        peg$c18 = { type: \"literal\", value: \"date\", description: \"\\\"date\\\"\" },\n        peg$c19 = \"time\",\n        peg$c20 = { type: \"literal\", value: \"time\", description: \"\\\"time\\\"\" },\n        peg$c21 = function(type, style) {\n                return {\n                    type : type + 'Format',\n                    style: style && style[2]\n                };\n            },\n        peg$c22 = \"plural\",\n        peg$c23 = { type: \"literal\", value: \"plural\", description: \"\\\"plural\\\"\" },\n        peg$c24 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: false,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options\n                };\n            },\n        peg$c25 = \"selectordinal\",\n        peg$c26 = { type: \"literal\", value: \"selectordinal\", description: \"\\\"selectordinal\\\"\" },\n        peg$c27 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: true,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options\n                }\n            },\n        peg$c28 = \"select\",\n        peg$c29 = { type: \"literal\", value: \"select\", description: \"\\\"select\\\"\" },\n        peg$c30 = function(options) {\n                return {\n                    type   : 'selectFormat',\n                    options: options\n                };\n            },\n        peg$c31 = \"=\",\n        peg$c32 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c33 = function(selector, pattern) {\n                return {\n                    type    : 'optionalFormatPattern',\n                    selector: selector,\n                    value   : pattern\n                };\n            },\n        peg$c34 = \"offset:\",\n        peg$c35 = { type: \"literal\", value: \"offset:\", description: \"\\\"offset:\\\"\" },\n        peg$c36 = function(number) {\n                return number;\n            },\n        peg$c37 = function(offset, options) {\n                return {\n                    type   : 'pluralFormat',\n                    offset : offset,\n                    options: options\n                };\n            },\n        peg$c38 = { type: \"other\", description: \"whitespace\" },\n        peg$c39 = /^[ \\t\\n\\r]/,\n        peg$c40 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n        peg$c41 = { type: \"other\", description: \"optionalWhitespace\" },\n        peg$c42 = /^[0-9]/,\n        peg$c43 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c44 = /^[0-9a-f]/i,\n        peg$c45 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\n        peg$c46 = \"0\",\n        peg$c47 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c48 = /^[1-9]/,\n        peg$c49 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n        peg$c50 = function(digits) {\n            return parseInt(digits, 10);\n        },\n        peg$c51 = /^[^{}\\\\\\0-\\x1F \\t\\n\\r]/,\n        peg$c52 = { type: \"class\", value: \"[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]\", description: \"[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]\" },\n        peg$c53 = \"\\\\\\\\\",\n        peg$c54 = { type: \"literal\", value: \"\\\\\\\\\", description: \"\\\"\\\\\\\\\\\\\\\\\\\"\" },\n        peg$c55 = function() { return '\\\\'; },\n        peg$c56 = \"\\\\#\",\n        peg$c57 = { type: \"literal\", value: \"\\\\#\", description: \"\\\"\\\\\\\\#\\\"\" },\n        peg$c58 = function() { return '\\\\#'; },\n        peg$c59 = \"\\\\{\",\n        peg$c60 = { type: \"literal\", value: \"\\\\{\", description: \"\\\"\\\\\\\\{\\\"\" },\n        peg$c61 = function() { return '\\u007B'; },\n        peg$c62 = \"\\\\}\",\n        peg$c63 = { type: \"literal\", value: \"\\\\}\", description: \"\\\"\\\\\\\\}\\\"\" },\n        peg$c64 = function() { return '\\u007D'; },\n        peg$c65 = \"\\\\u\",\n        peg$c66 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n        peg$c67 = function(digits) {\n                return String.fromCharCode(parseInt(digits, 16));\n            },\n        peg$c68 = function(chars) { return chars.join(''); },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemessageFormatPattern();\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatPattern() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsemessageFormatElement();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsemessageFormatElement();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c1(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatElement() {\n      var s0;\n\n      s0 = peg$parsemessageTextElement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseargumentElement();\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageText() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsechars();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsechars();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c3(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsews();\n        if (s1 !== peg$FAILED) {\n          s1 = input.substring(s0, peg$currPos);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageTextElement() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemessageText();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseargument() {\n      var s0, s1, s2;\n\n      s0 = peg$parsenumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c5.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c5.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n          }\n        } else {\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          s1 = input.substring(s0, peg$currPos);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parseargumentElement() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseargument();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c10;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c11); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseelementFormat();\n                  if (s8 !== peg$FAILED) {\n                    s6 = [s6, s7, s8];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c2;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$c9;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s7 = peg$c12;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c13); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c14(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseelementFormat() {\n      var s0;\n\n      s0 = peg$parsesimpleFormat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepluralFormat();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseselectOrdinalFormat();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseselectFormat();\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimpleFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c15) {\n        s1 = peg$c15;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c16); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c17) {\n          s1 = peg$c17;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c10;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsechars();\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c2;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c9;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c21(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c24(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectOrdinalFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 13) === peg$c25) {\n        s1 = peg$c25;\n        peg$currPos += 13;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c27(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c28) {\n        s1 = peg$c28;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseoptionalFormatPattern();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseoptionalFormatPattern();\n                }\n              } else {\n                s5 = peg$c2;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c30(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s2 = peg$c31;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenumber();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsechars();\n      }\n\n      return s0;\n    }\n\n    function peg$parseoptionalFormatPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselector();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c7;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsemessageFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c12;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c33(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseoffset() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c34) {\n        s1 = peg$c34;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenumber();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c36(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralStyle() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseoffset();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c9;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseoptionalFormatPattern();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseoptionalFormatPattern();\n            }\n          } else {\n            s3 = peg$c2;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c37(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c39.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c39.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n        }\n      } else {\n        s0 = peg$c2;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsews();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsews();\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit() {\n      var s0;\n\n      if (peg$c42.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehexDigit() {\n      var s0;\n\n      if (peg$c44.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c46;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c47); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$currPos;\n        if (peg$c48.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c49); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsedigit();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsedigit();\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          s2 = input.substring(s1, peg$currPos);\n        }\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c50(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      if (peg$c51.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c53) {\n          s1 = peg$c53;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c55();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c56) {\n            s1 = peg$c56;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c57); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c58();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c59) {\n              s1 = peg$c59;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c60); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c61();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c62) {\n                s1 = peg$c62;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c63); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c64();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c65) {\n                  s1 = peg$c65;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$currPos;\n                  s3 = peg$currPos;\n                  s4 = peg$parsehexDigit();\n                  if (s4 !== peg$FAILED) {\n                    s5 = peg$parsehexDigit();\n                    if (s5 !== peg$FAILED) {\n                      s6 = peg$parsehexDigit();\n                      if (s6 !== peg$FAILED) {\n                        s7 = peg$parsehexDigit();\n                        if (s7 !== peg$FAILED) {\n                          s4 = [s4, s5, s6, s7];\n                          s3 = s4;\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$c2;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$c2;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s3 = input.substring(s2, peg$currPos);\n                  }\n                  s2 = s3;\n                  if (s2 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c67(s2);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsechars() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c68(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();","// GENERATED FILE\nexport default {\"locale\":\"en\",\"pluralRuleFunction\":function (n,ord){var s=String(n).split(\".\"),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?\"one\":n10==2&&n100!=12?\"two\":n10==3&&n100!=13?\"few\":\"other\";return n==1&&v0?\"one\":\"other\"}};\n","/* jslint esnext: true */\n\nimport IntlMessageFormat from './core';\nimport defaultLocale from './en';\n\nIntlMessageFormat.__addLocaleData(defaultLocale);\nIntlMessageFormat.defaultLocale = 'en';\n\nexport default IntlMessageFormat;\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport {defineProperty, objCreate, arrIndexOf, isArray, dateNow};\n\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\n// Copyright 2013 Andy Earnshaw, MIT License\n\nvar hop = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nvar realDefineProp = (function () {\n    try { return !!Object.defineProperty({}, 'a', {}); }\n    catch (e) { return false; }\n})();\n\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\nvar defineProperty = realDefineProp ? Object.defineProperty :\n        function (obj, name, desc) {\n\n    if ('get' in desc && obj.__defineGetter__) {\n        obj.__defineGetter__(name, desc.get);\n    } else if (!hop.call(obj, name) || 'value' in desc) {\n        obj[name] = desc.value;\n    }\n};\n\nvar objCreate = Object.create || function (proto, props) {\n    var obj, k;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (k in props) {\n        if (hop.call(props, k)) {\n            defineProperty(obj, k, props[k]);\n        }\n    }\n\n    return obj;\n};\n\nvar arrIndexOf = Array.prototype.indexOf || function (search, fromIndex) {\n    /*jshint validthis:true */\n    var arr = this;\n    if (!arr.length) {\n        return -1;\n    }\n\n    for (var i = fromIndex || 0, max = arr.length; i < max; i++) {\n        if (arr[i] === search) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n\nvar isArray = Array.isArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n};\n\nvar dateNow = Date.now || function () {\n    return new Date().getTime();\n};\n","// GENERATED FILE\nexport default {\"locale\":\"en\",\"pluralRuleFunction\":function (n,ord){var s=String(n).split(\".\"),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?\"one\":n10==2&&n100!=12?\"two\":n10==3&&n100!=13?\"few\":\"other\";return n==1&&v0?\"one\":\"other\"},\"fields\":{\"year\":{\"displayName\":\"year\",\"relative\":{\"0\":\"this year\",\"1\":\"next year\",\"-1\":\"last year\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} year\",\"other\":\"in {0} years\"},\"past\":{\"one\":\"{0} year ago\",\"other\":\"{0} years ago\"}}},\"month\":{\"displayName\":\"month\",\"relative\":{\"0\":\"this month\",\"1\":\"next month\",\"-1\":\"last month\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} month\",\"other\":\"in {0} months\"},\"past\":{\"one\":\"{0} month ago\",\"other\":\"{0} months ago\"}}},\"day\":{\"displayName\":\"day\",\"relative\":{\"0\":\"today\",\"1\":\"tomorrow\",\"-1\":\"yesterday\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} day\",\"other\":\"in {0} days\"},\"past\":{\"one\":\"{0} day ago\",\"other\":\"{0} days ago\"}}},\"hour\":{\"displayName\":\"hour\",\"relativeTime\":{\"future\":{\"one\":\"in {0} hour\",\"other\":\"in {0} hours\"},\"past\":{\"one\":\"{0} hour ago\",\"other\":\"{0} hours ago\"}}},\"minute\":{\"displayName\":\"minute\",\"relativeTime\":{\"future\":{\"one\":\"in {0} minute\",\"other\":\"in {0} minutes\"},\"past\":{\"one\":\"{0} minute ago\",\"other\":\"{0} minutes ago\"}}},\"second\":{\"displayName\":\"second\",\"relative\":{\"0\":\"now\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} second\",\"other\":\"in {0} seconds\"},\"past\":{\"one\":\"{0} second ago\",\"other\":\"{0} seconds ago\"}}}}};\n","/* jslint esnext: true */\n\nimport IntlRelativeFormat from './core';\nimport defaultLocale from './en';\n\nIntlRelativeFormat.__addLocaleData(defaultLocale);\nIntlRelativeFormat.defaultLocale = 'en';\n\nexport default IntlRelativeFormat;\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\n// Function.prototype.bind implementation from Mozilla Developer Network:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\nvar bind = Function.prototype.bind || function (oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(this instanceof fNOP\n                 ? this\n                 : oThis,\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    if (this.prototype) {\n      // native functions don't have a prototype\n      fNOP.prototype = this.prototype;\n    }\n    fBound.prototype = new fNOP();\n\n    return fBound;\n};\n\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\n// Copyright 2013 Andy Earnshaw, MIT License\n\nvar hop = Object.prototype.hasOwnProperty;\n\nvar realDefineProp = (function () {\n    try { return !!Object.defineProperty({}, 'a', {}); }\n    catch (e) { return false; }\n})();\n\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\nvar defineProperty = realDefineProp ? Object.defineProperty :\n        function (obj, name, desc) {\n\n    if ('get' in desc && obj.__defineGetter__) {\n        obj.__defineGetter__(name, desc.get);\n    } else if (!hop.call(obj, name) || 'value' in desc) {\n        obj[name] = desc.value;\n    }\n};\n\nvar objCreate = Object.create || function (proto, props) {\n    var obj, k;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (k in props) {\n        if (hop.call(props, k)) {\n            defineProperty(obj, k, props[k]);\n        }\n    }\n\n    return obj;\n};\n\nexport {bind, defineProperty, objCreate};\n","import IntlMessageFormat from 'intl-messageformat';\nimport IntlRelativeFormat from 'intl-relativeformat';\nimport IntlPluralFormat from './plural';\nimport memoizeIntlConstructor from 'intl-format-cache';\n\nconst state = {\n    getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat),\n    getNumberFormat  : memoizeIntlConstructor(Intl.NumberFormat),\n    getMessageFormat : memoizeIntlConstructor(IntlMessageFormat),\n    getRelativeFormat: memoizeIntlConstructor(IntlRelativeFormat),\n    getPluralFormat  : memoizeIntlConstructor(IntlPluralFormat),\n    now: Date.now()\n};\n\nexport default state;\n","/*\n * This file is a modified version of that used in the react-intl package.\n * https://github.com/yahoo/react-intl\n * The license notice below is provided to comply with the terms of the BSD license of that package.\n */\n\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n *\n *   * Neither the name of the Yahoo Inc. nor the\n *     names of its contributors may be used to endorse or promote products\n *     derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL YAHOO! INC. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst bool = { type : Boolean },\n    number = { type : Number },\n    string = { type : String },\n    object = { type : Object },\n    oneOf = function(array) {\n        return {validator: function(value) {\n            return array.indexOf(value) > -1;\n        }};\n    };\n\nexport const intlConfigPropTypes = {\n    locale  : string,\n    formats : object,\n    messages: object,\n\n    defaultLocale : string,\n    defaultFormats: object\n};\n\nexport const dateTimeFormatPropTypes = {\n    localeMatcher: oneOf(['best fit', 'lookup']),\n    formatMatcher: oneOf(['basic', 'best fit']),\n\n    timeZone: string,\n    hour12  : bool,\n\n    weekday     : oneOf(['narrow', 'short', 'long']),\n    era         : oneOf(['narrow', 'short', 'long']),\n    year        : oneOf(['numeric', '2-digit']),\n    month       : oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    day         : oneOf(['numeric', '2-digit']),\n    hour        : oneOf(['numeric', '2-digit']),\n    minute      : oneOf(['numeric', '2-digit']),\n    second      : oneOf(['numeric', '2-digit']),\n    timeZoneName: oneOf(['short', 'long'])\n};\n\nexport const numberFormatPropTypes = {\n    localeMatcher: oneOf(['best fit', 'lookup']),\n\n    style          : oneOf(['decimal', 'currency', 'percent']),\n    currency       : string,\n    currencyDisplay: oneOf(['symbol', 'code', 'name']),\n    useGrouping    : bool,\n\n    minimumIntegerDigits    : number,\n    minimumFractionDigits   : number,\n    maximumFractionDigits   : number,\n    minimumSignificantDigits: number,\n    maximumSignificantDigits: number\n};\n\nexport const relativeFormatPropTypes = {\n    style: oneOf(['best fit', 'numeric']),\n    units: oneOf(['second', 'minute', 'hour', 'day', 'month', 'year'])\n};\n\nexport const pluralFormatPropTypes = {\n    style: oneOf(['cardinal', 'ordinal'])\n};\n","import {addLocaleData, registerMessages, registerFormats} from './localeData';\nimport setLocale from './setLocale';\nimport getLocaleData from './getLocaleData';\nimport state from './state';\nimport * as formatMethods from './format';\n\nconst VueIntl = {\n    install(Vue, options={}) {\n        Vue.addLocaleData = addLocaleData;\n        Vue.registerMessages = registerMessages.bind(null, Vue);\n        Vue.registerFormats = registerFormats.bind(null, Vue);\n        Vue.setLocale = setLocale.bind(null, Vue);\n        Vue.__format_state = state;\n        Vue.__format_config = {\n            defaultLocale: options.defaultLocale || 'en',\n            defaultFormats: options.defaultFormats || {}\n        };\n\n        for (let key of Object.getOwnPropertyNames(formatMethods).filter((name) => {\n            return formatMethods[name] instanceof Function;\n        })) {\n            Vue.prototype[`\\$${key}`] = function(...args) {\n                let config = {locale: Vue.locale};\n                Object.assign(config, getLocaleData(Vue));\n                const state = Vue.__format_state;\n                return formatMethods[key](config, state, ...args);\n            }\n        }\n    }\n};\n\nexport default VueIntl;\n"],"names":["extend","obj","i","len","source","key","sources","Array","prototype","slice","call","arguments","length","hop","Compiler","locales","formats","pluralFn","StringFormat","id","PluralFormat","useOrdinal","offset","options","PluralOffsetString","numberFormat","string","SelectFormat","MessageFormat","message","ast","__parse","type","TypeError","this","_mergeFormats","value","_resolveLocale","_findPluralRuleFunction","_locale","pattern","_compilePattern","messageFormat","format","values","_format","daysToYears","days","RelativeFormat","isArray","concat","_resolveStyle","style","_isValidUnits","units","_findFields","objCreate","relativeFormat","date","addLocaleData","data","forEach","localeData","locale","__addLocaleData","registerMessages","Vue","messages","__allMessages","assign","registerFormats","__allFormats","setLocale","set","format_data","Object","getOwnPropertyNames","__format_config","defaultFormats","getLocaleData","defaultLocale","resolveLocale","IntlMessageFormat","findPluralFunction","createFormatCache","FormatConstructor","cache","args","cacheId","getCacheId","bind","apply","inputs","JSON","input","push","orderedProps","stringify","prop","props","keys","hasOwnProperty","orderedKeys","sort","escape","str","replace","UNSAFE_CHARS_REGEX","match","ESCAPED_CHARS","filterProps","whitelist","defaults","reduce","filtered","name","updateRelativeFormatThresholds","newThresholds","thresholds","IntlRelativeFormat","second","minute","hour","day","month","getNamedFormat","formatDate","config","state","Date","filteredOptions","DATE_TIME_FORMAT_OPTIONS","getDateTimeFormat","e","String","formatTime","formatRelative","now","RELATIVE_FORMAT_OPTIONS","oldThresholds","RELATIVE_FORMAT_THRESHOLDS","getRelativeFormat","isFinite","formatNumber","NUMBER_FORMAT_OPTIONS","getNumberFormat","formatPlural","PLURAL_FORMAT_OPTIONS","getPluralFormat","formatMessage","messageDescriptor","defaultMessage","hasValues","formattedMessage","formatter","getMessageFormat","formatHTMLMessage","rawValues","escapedValues","escaped","realDefineProp","defineProperty","desc","__defineGetter__","get","create","proto","F","k","compile","pluralStack","currentPlural","pluralNumberFormat","compileMessage","Error","element","elements","compileMessageText","compileArgument","test","Intl","NumberFormat","number","DateTimeFormat","time","compileOptions","ordinal","optionsHash","option","selector","pop","getOption","other","peg$subclass","child","parent","ctor","constructor","SyntaxError","expected","found","line","column","parse","peg$computePosDetails","pos","advance","details","startPos","endPos","p","ch","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$currPos","peg$maxFailPos","peg$buildException","cleanupExpected","a","b","description","splice","buildMessage","stringEscape","s","hex","charCodeAt","toString","toUpperCase","expectedDesc","foundDesc","expectedDescs","join","posDetails","peg$parsestart","s0","peg$parsemessageFormatPattern","s1","s2","peg$parsemessageFormatElement","peg$FAILED","peg$c1","peg$parsemessageTextElement","peg$parseargumentElement","peg$parsemessageText","s3","s4","s5","peg$parse_","peg$parsechars","peg$c2","peg$c3","peg$parsews","substring","peg$c4","peg$parseargument","peg$parsenumber","peg$c5","peg$silentFails","peg$c6","s6","s7","s8","peg$c7","peg$c8","peg$c10","peg$c11","peg$parseelementFormat","peg$c9","peg$c12","peg$c13","peg$c14","peg$parsesimpleFormat","peg$parsepluralFormat","peg$parseselectOrdinalFormat","peg$parseselectFormat","substr","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$parsepluralStyle","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$parseoptionalFormatPattern","peg$c30","peg$parseselector","peg$c31","peg$c32","peg$c33","peg$parseoffset","peg$c34","peg$c35","peg$c36","peg$c37","peg$c39","peg$c40","peg$c38","peg$c41","peg$parsedigit","peg$c42","peg$c43","peg$parsehexDigit","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$parsechar","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$result","peg$startRuleFunctions","start","peg$startRuleFunction","text","j","outerLen","inner","innerLen","messageText","pluralStyle","digits","parseInt","fromCharCode","chars","peg$reportedPos","peg$maxFailExpected","startRule","__localeData__","toLowerCase","parser","undefined","resolvedOptions","compiler","pluralRuleFunction","parentLocale","part","result","mergedType","mergedFormats","localeParts","split","n","ord","v0","t0","Number","n10","n100","round","Math","from","to","millisecond","week","rawYears","year","arrIndexOf","indexOf","search","fromIndex","arr","max","dateNow","getTime","FIELDS","STYLES","_options","_compileMessage","_locales","field","_fields","relativeTime","future","past","_getMessage","_messages","_getRelativeUnits","diff","relative","fields","RangeError","diffReport","_selectUnits","diffInUnits","relativeUnits","abs","suggestion","l","displayName","0","1","-1","one","IntlPluralFormat","Function","oThis","aArgs","fToBind","fNOP","fBound","memoizeIntlConstructor","bool","Boolean","oneOf","array","validator","dateTimeFormatPropTypes","numberFormatPropTypes","relativeFormatPropTypes","pluralFormatPropTypes","VueIntl","__format_state","formatMethods","filter"],"mappings":"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"}